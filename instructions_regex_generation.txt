# ============================================
# ИНСТРУКЦИИ ДЛЯ LLM: АНАЛИЗ ДОКУМЕНТА И ГЕНЕРАЦИЯ REGEX
# ============================================
#
# ЗАДАЧА:
# 1. Проанализируй текст документа
# 2. Найди все важные данные
# 3. Для КАЖДОГО найденного элемента создай REGEX паттерн
# 4. Верни JSON с данными и regex паттернами
#
# ============================================

Ты эксперт по анализу технических документов и созданию регулярных выражений.

ТВОЯ ЗАДАЧА - ДВУХЭТАПНАЯ:

ЭТАП 1: АНАЛИЗ И ИЗВЛЕЧЕНИЕ
Проанализируй документ и найди ВСЕ важные данные.

ЭТАП 2: ГЕНЕРАЦИЯ REGEX
Для КАЖДОГО найденного элемента данных создай REGEX паттерн, который:
- Работает с учётом контекста (что находится ДО и ПОСЛЕ данных)
- Учитывает возможные вариации (пробелы, переносы строк)
- Использует группы захвата для извлечения значений
- Использует правильные флаги (MULTILINE, DOTALL, IGNORECASE)

════════════════════════════════════════════════════════════════
РАЗДЕЛ 1: МЕТАДАННЫЕ ДОКУМЕНТА
════════════════════════════════════════════════════════════════

[TASK: extract_document_metadata]
@OUTPUT_KEY: document_metadata

НАЙДИ:
1. Номер документа (формат: ЦЦ-ЦЦЦЦ, например "01-0530")
2. Дату документа (формат: ММ.ГГГГ, например "04.2025")
3. Список всех адресатов (строки начинаются с "Начальнику")

ДЛЯ КАЖДОГО ЭЛЕМЕНТА СОЗДАЙ REGEX:

Верни результат в формате:
{
  "extracted_data": {
    "document_number": "01-0530",
    "date": "04.2025",
    "addressees": [
      "Начальнику ЭСПЦ",
      "Начальнику СПЦ-1",
      ...
    ]
  },
  "regex_patterns": {
    "document_number": {
      "pattern": "^(\\d{2}-\\s*\\d{4})$",
      "flags": ["MULTILINE"],
      "context_before": "--- Страница 1 ---",
      "context_after": "\\d{2}\\.\\d{4}",
      "example_match": "01-0530",
      "description": "Номер документа в формате ЦЦ-ЦЦЦЦ"
    },
    "date": {
      "pattern": "^(\\d{2}\\.\\d{4})$",
      "flags": ["MULTILINE"],
      "context_before": "\\d{2}-\\s*\\d{4}",
      "context_after": "Начальнику",
      "example_match": "04.2025",
      "description": "Дата в формате ММ.ГГГГ"
    },
    "addressees": {
      "pattern": "^(Начальнику [^\\n]+)$",
      "flags": ["MULTILINE"],
      "context_before": "\\d{2}\\.\\d{4}",
      "context_after": "0 производстве|О производстве",
      "example_match": "Начальнику ЭСПЦ",
      "description": "Список адресатов, каждый на отдельной строке"
    }
  }
}

════════════════════════════════════════════════════════════════
РАЗДЕЛ 2: ЗАГОЛОВОК И ОСНОВНЫЕ ПАРАМЕТРЫ СТАЛИ
════════════════════════════════════════════════════════════════

[TASK: extract_steel_parameters]
@OUTPUT_KEY: steel_parameters

НАЙДИ ВСЕ параметры стали в начале документа:
1. Марка стали (после "стали марки")
2. Вариант (после "вариант")
3. Код ОЭМК (после "код ОЭМК")
4. Код вида продукции (после "код вида продукции")
5. Экспортное наименование (после "экспортное наименование")
6. Условный аналог (после "условный аналог")
7. Стандарт выплавки (после "стандарт выплавки")
8. № потребительских свойств (после "Ng потребительских свойств" или "№ потребительских свойств")

ДЛЯ КАЖДОГО ПАРАМЕТРА:
- Найди ТОЧНОЕ значение в тексте
- Создай REGEX с учётом контекста и возможных пробелов
- Укажи что находится ДО и ПОСЛЕ значения

Верни результат в формате:
{
  "extracted_data": {
    "steel_grade": "6856",
    "variant": "0",
    "code_oemk": "dэ7",
    "production_code": "090116",
    "export_name": "42CrMoS4+H",
    "analog": "З8ХГМ",
    "melting_standard": "настоящее ДП/25",
    "consumer_properties_number": "0ОООО 7"
  },
  "regex_patterns": {
    "steel_grade": {
      "pattern": "стали марки\\s+(\\d+)",
      "flags": ["MULTILINE", "IGNORECASE"],
      "context_before": "производстве.*?проката",
      "context_after": "вариант",
      "example_match": "6856",
      "description": "Марка стали - числовое значение"
    },
    "variant": {
      "pattern": "вариант\\s+(\\d+)",
      "flags": ["MULTILINE"],
      "context_before": "марки \\d+",
      "context_after": "код ОЭМК",
      "example_match": "0",
      "description": "Вариант стали"
    },
    "code_oemk": {
      "pattern": "код ОЭМК\\s*\\n?\\s*([^\\n]+?)\\s*(?=\\n|код вида)",
      "flags": ["MULTILINE", "IGNORECASE"],
      "context_before": "вариант \\d+",
      "context_after": "код вида продукции",
      "example_match": "dэ7",
      "description": "Код ОЭМК - может содержать буквы и цифры"
    },
    "production_code": {
      "pattern": "код вида продукции\\s+(\\d+)",
      "flags": ["MULTILINE"],
      "context_before": "код ОЭМК",
      "context_after": "экспортное наименование",
      "example_match": "090116",
      "description": "Код вида продукции"
    },
    "export_name": {
      "pattern": "экспортное наименование\\s+([^\\n]+?)\\s*(?=\\n)",
      "flags": ["MULTILINE"],
      "context_before": "код вида продукции",
      "context_after": "условный аналог",
      "example_match": "42CrMoS4+H",
      "description": "Экспортное наименование"
    },
    "analog": {
      "pattern": "условный аналог\\s+([^\\n]+?)\\s*(?=\\n)",
      "flags": ["MULTILINE"],
      "context_before": "экспортное наименование",
      "context_after": "стандарт выплавки",
      "example_match": "З8ХГМ",
      "description": "Условный аналог"
    },
    "melting_standard": {
      "pattern": "стандарт выплавки\\s+([^\\n]+?)\\s*(?=\\n|Ng)",
      "flags": ["MULTILINE"],
      "context_before": "условный аналог",
      "context_after": "потребительских свойств",
      "example_match": "настоящее ДП/25",
      "description": "Стандарт выплавки"
    }
  }
}

════════════════════════════════════════════════════════════════
РАЗДЕЛ 3: ТАБЛИЦА 1 - ХИМИЧЕСКИЙ СОСТАВ
════════════════════════════════════════════════════════════════

[TASK: extract_table_1_chemical_composition]
@OUTPUT_KEY: table_1_chemical_composition

НАЙДИ Таблицу 1 с химическим составом:
1. Определи список химических элементов (столбцы)
2. Найди ВСЕ строки данных:
   - Рекомендуемые значения (маркер: "Рекоменд")
   - Аттестатные значения (маркер: "Аттестат")
   - Значения ЭСПЦ (маркер: "ЭСПЦ")
3. Извлеки ЧИСЛОВЫЕ значения для каждого элемента в каждой строке

ВАЖНО: Таблица может быть разбросана по нескольким строкам!

Верни результат в формате:
{
  "extracted_data": {
    "table_number": "1",
    "table_title": "Химический состав",
    "elements": ["С", "Si", "Mn", "S", "Cr", "Ni", "Cu", "Al"],
    "rows": {
      "recommended": {
        "С": "0,42",
        "Si": "0,25",
        "Mn": "0,85",
        "S": "0,028",
        "Cr": "1,05",
        "Ni": "0,025",
        "Cu": "0,19",
        "Al": "0,030"
      },
      "certificate": {
        "С": "0,40",
        "Si": "0,15",
        "Mn": "0,80",
        "S": "0,020",
        "Cr": "1,00",
        "Ni": "н.б.",
        "Cu": "0,18",
        "Al": "0,015"
      },
      "espz": {
        "С": "0,45",
        "Si": "0,30",
        "Mn": "0,90",
        "S": "0,035",
        "Cr": "1,10",
        "Ni": "0,25",
        "Cu": "0,20",
        "Al": "0,030"
      }
    }
  },
  "regex_patterns": {
    "table_header": {
      "pattern": "Таблица\\s*\\n\\s*(1)\\s*\\n",
      "flags": ["MULTILINE"],
      "description": "Заголовок таблицы 1"
    },
    "elements_line": {
      "pattern": "Таблица\\s*1[\\s\\S]{0,50}?(С)\\s*\\n?\\s*(Si)\\s*\\n?\\s*(Mn)\\s*\\n?\\s*(S)\\s*\\n?\\s*(Cr)\\s*\\n?\\s*(Ni)\\s*\\n?\\s*(Cu)\\s*\\n?\\s*(Al)",
      "flags": ["MULTILINE", "DOTALL"],
      "description": "Строка с названиями элементов",
      "example_match": "С Si Mn S Cr Ni Cu Al"
    },
    "recommended_values": {
      "pattern": "Рекоменд[^\\n]*?\\n([0-9,\\s\\n]+?)(?=Аттестат)",
      "flags": ["MULTILINE", "DOTALL"],
      "description": "Рекомендуемые значения - числа через пробелы/переносы",
      "extraction_method": "split_and_parse_numbers"
    },
    "certificate_values": {
      "pattern": "Аттестат[^\\n]*?\\n([0-9,нбН\\.\\s\\n]+?)(?=ЭСПЦ)",
      "flags": ["MULTILINE", "DOTALL"],
      "description": "Аттестатные значения",
      "extraction_method": "split_and_parse_numbers"
    },
    "espz_values": {
      "pattern": "ЭСПЦ\\s*\\n([0-9,\\s\\n]+?)(?=Примечания|\\n\\n)",
      "flags": ["MULTILINE", "DOTALL"],
      "description": "Значения ЭСПЦ",
      "extraction_method": "split_and_parse_numbers"
    }
  },
  "extraction_notes": {
    "method": "Таблица разбросана по строкам, нужно собирать значения последовательно",
    "challenges": [
      "Числа могут быть на разных строках",
      "Могут быть дубликаты значений",
      "Некоторые значения 'н.б.' (не более)"
    ]
  }
}

════════════════════════════════════════════════════════════════
РАЗДЕЛ 4: ПРОИЗВОДСТВЕННЫЕ ПАРАМЕТРЫ (ЧИСЛОВЫЕ ЗНАЧЕНИЯ)
════════════════════════════════════════════════════════════════

[TASK: extract_production_parameters]
@OUTPUT_KEY: production_parameters

НАЙДИ ВСЕ числовые производственные параметры в разделе "ПРОИЗВОДСТВО НЛЗ":
1. Расход лома (после "Расход лома")
2. Количество алюминия на выпуске (после "присаживается")
3. Температура выпуска из печи (из Таблицы 2)
4. Температура перед УНРС (из Таблицы 2)
5. Температура в промковше (из Таблицы 2)
6. Скорость разливки (после "Скорость разливки")
7. Группа качества НЛЗ (после "Группа качества НЛЗ")

ДЛЯ КАЖДОГО ПАРАМЕТРА создай regex с единицами измерения!

Верни результат в формате:
{
  "extracted_data": {
    "scrap_consumption": {
      "value": "65-75",
      "unit": "тонн",
      "source_text": "1.2. Расход лома 65-75 ТОНН."
    },
    "aluminum_on_release": {
      "value": "60-75",
      "unit": "кг",
      "source_text": "присаживается 60-75 кг чушкового алюминия"
    },
    "temperature_release_from_furnace": {
      "min": "1620",
      "max": "1640",
      "unit": "°C"
    },
    "temperature_before_unrs": {
      "min": "1565",
      "max": "1575",
      "unit": "°C"
    },
    "temperature_in_tundish": {
      "min": "1520",
      "max": "1535",
      "unit": "°C"
    },
    "casting_speed": {
      "working": "0,55",
      "range": "0,50-0,60",
      "unit": "м/мин"
    },
    "nlz_quality_group": {
      "value": "1",
      "standard": "СТП 025"
    }
  },
  "regex_patterns": {
    "scrap_consumption": {
      "pattern": "Расход лома\\s+(\\d+-?\\d*)\\s*(ТОНН|тонн|т)",
      "flags": ["MULTILINE", "IGNORECASE"],
      "description": "Расход лома в тоннах"
    },
    "aluminum_on_release": {
      "pattern": "присаживается\\s+(\\d+-?\\d*)\\s*кг",
      "flags": ["MULTILINE", "IGNORECASE"],
      "description": "Количество алюминия"
    },
    "table_2_temperatures": {
      "pattern": "Таблица 2[\\s\\S]{1,500}?Температура выпуска из печи\\s*\\n\\s*Температура перед УНРС\\s*\\n\\s*Температура в промковше\\s*\\n\\s*(\\d+)\\s*\\n\\s*(\\d+)\\s*\\n\\s*(\\d+)\\s*\\n\\s*(\\d+)\\s*\\n\\s*(\\d+)\\s*\\n\\s*(\\d+)",
      "flags": ["MULTILINE", "DOTALL"],
      "description": "Температурный режим из Таблицы 2 - 6 значений (3 пары мин-макс)",
      "extraction_method": "group_by_pairs"
    },
    "casting_speed": {
      "pattern": "Скорость разливки рабочая\\s*\\n?\\s*([0-9,]+)\\s*м[/]?мин\\s*\\(([0-9,]+)\\s*[–-]?\\s*([0-9,]+)\\)",
      "flags": ["MULTILINE"],
      "description": "Скорость разливки: рабочая и диапазон"
    },
    "nlz_quality_group": {
      "pattern": "Группа качества НЛЗ\\s*\\n?\\s*(\\d+)\\s+(СТП \\d+)",
      "flags": ["MULTILINE"],
      "description": "Группа качества НЛЗ"
    }
  }
}

════════════════════════════════════════════════════════════════
РАЗДЕЛ 5: ТАБЛИЦА 4 - ДИАМЕТРЫ И ДОПУСКИ
════════════════════════════════════════════════════════════════

[TASK: extract_table_4_diameters]
@OUTPUT_KEY: table_4_diameters

НАЙДИ Таблицу 4 с размерами проката:
- Столбцы: Диаметр (мм), Допуск по диаметру, Разность диаметров, Отклонение от перпендикулярности, Дефекты
- Извлеки ВСЕ строки данных (диаметры от 85 до 190 мм)

Верни результат в формате:
{
  "extracted_data": {
    "table_number": "4",
    "headers": [
      "Диаметр MM",
      "Допуск по диаметру, мм",
      "Разность между наибольшим и наименьшим диаметром, не более, мм",
      "Отклонение от перпендикулярности, не более, мм",
      "Дефекты глубиной не более, мм"
    ],
    "rows": [
      {
        "diameter": "85",
        "tolerance": "+1,3",
        "difference": "1,9",
        "perpendicularity": "7,4",
        "defects": "0,8"
      },
      {
        "diameter": "90",
        "tolerance": "+1,3",
        "difference": "1,9",
        "perpendicularity": "7,8",
        "defects": "0,9"
      }
      // ... все строки до 190 мм
    ]
  },
  "regex_patterns": {
    "table_4_block": {
      "pattern": "Таблица 4[\\s\\S]{1,3000}?(?=Рекомендуется прокатку)",
      "flags": ["DOTALL"],
      "description": "Весь блок Таблицы 4"
    },
    "table_4_row": {
      "pattern": "^(\\d{2,3})\\s*\\n?\\s*([+\\-][0-9,]+)\\s*\\n?\\s*([0-9,]+)\\s*\\n?\\s*([0-9,]+)\\s*\\n?\\s*([0-9,]+)?",
      "flags": ["MULTILINE"],
      "description": "Одна строка таблицы: диаметр, допуск, разность, перпендикулярность, дефекты",
      "extraction_method": "find_all_rows"
    }
  },
  "extraction_notes": {
    "method": "Построчное извлечение с помощью finditer",
    "challenges": [
      "Данные на разных строках",
      "Последний столбец может отсутствовать для некоторых строк"
    ]
  }
}

════════════════════════════════════════════════════════════════
РАЗДЕЛ 6: РАЗДЕЛЫ ДОКУМЕНТА
════════════════════════════════════════════════════════════════

[TASK: extract_document_sections]
@OUTPUT_KEY: document_sections

НАЙДИ границы основных разделов:
1. "1. ПРОИЗВОДСТВО НЛЗ" - от начала до "2. ПРОИЗВОДСТВО ПРОКАТА"
2. "2. ПРОИЗВОДСТВО ПРОКАТА" - от начала до "3. КОНТРОЛЬ И АТТЕСТАЦИЯ"
3. "3. КОНТРОЛЬ И АТТЕСТАЦИЯ" - от начала до конца документа

ДЛЯ КАЖДОГО РАЗДЕЛА:
- Создай regex для извлечения всего текста раздела
- Создай regex для извлечения подпунктов (1.1, 1.2, ... 2.1, 2.2, ...)

Верни результат в формате:
{
  "extracted_data": {
    "sections": [
      {
        "number": "1",
        "title": "ПРОИЗВОДСТВО НЛЗ",
        "subsections_count": 18,
        "subsections": ["1.1", "1.2", "1.3", ..., "1.18"]
      },
      {
        "number": "2",
        "title": "ПРОИЗВОДСТВО ПРОКАТА",
        "subsections_count": 13,
        "subsections": ["2.1", "2.2", "2.3", ..., "2.13"]
      },
      {
        "number": "3",
        "title": "КОНТРОЛЬ И АТТЕСТАЦИЯ ПРОКАТА",
        "subsections_count": 3,
        "subsections": ["3.1", "3.2", "3.3"]
      }
    ]
  },
  "regex_patterns": {
    "section_1_full": {
      "pattern": "(?:1\\.|L)\\s*ПРОИЗВОДСТВО НЛЗ[:\\s]*([\\s\\S]+?)(?=2\\.\\s*ПРОИЗВОДСТВО ПРОКАТА|Таблица 3)",
      "flags": ["MULTILINE", "DOTALL"],
      "description": "Весь раздел 1"
    },
    "section_1_subsections": {
      "pattern": "^(1\\.\\d+\\.?)\\s+([\\s\\S]+?)(?=^1\\.\\d+\\.|^2\\.|$)",
      "flags": ["MULTILINE"],
      "description": "Подразделы 1.1, 1.2 и т.д.",
      "extraction_method": "finditer"
    },
    "section_2_full": {
      "pattern": "2\\.\\s*ПРОИЗВОДСТВО ПРОКАТА[\\s\\S]+?(?=3\\.\\s*КОНТРОЛЬ И АТТЕСТАЦИЯ)",
      "flags": ["MULTILINE", "DOTALL"],
      "description": "Весь раздел 2"
    },
    "section_2_subsections": {
      "pattern": "^(2\\.\\d+\\.?)\\s+([\\s\\S]+?)(?=^2\\.\\d+\\.|^3\\.|$)",
      "flags": ["MULTILINE"],
      "description": "Подразделы 2.1, 2.2 и т.д."
    },
    "section_3_full": {
      "pattern": "3\\.\\s*КОНТРОЛЬ И АТТЕСТАЦИЯ ПРОКАТА[\\s\\S]+?(?=Технический директор|$)",
      "flags": ["MULTILINE", "DOTALL"],
      "description": "Весь раздел 3"
    },
    "section_3_subsections": {
      "pattern": "^(3\\.\\d+\\.?)\\s+([\\s\\S]+?)(?=^3\\.\\d+\\.|Технический директор|$)",
      "flags": ["MULTILINE"],
      "description": "Подразделы 3.1, 3.2, 3.3"
    }
  }
}

════════════════════════════════════════════════════════════════
ФИНАЛЬНЫЙ JSON
════════════════════════════════════════════════════════════════

Верни результат в ОДНОМ JSON файле, объединяющем ВСЕ разделы:

{
  "document_info": {
    "filename": "название файла",
    "analysis_method": "llm_with_regex_generation"
  },
  "sections": {
    "document_metadata": {
      "extracted_data": {...},
      "regex_patterns": {...}
    },
    "steel_parameters": {
      "extracted_data": {...},
      "regex_patterns": {...}
    },
    "table_1_chemical_composition": {
      "extracted_data": {...},
      "regex_patterns": {...}
    },
    "production_parameters": {
      "extracted_data": {...},
      "regex_patterns": {...}
    },
    "table_4_diameters": {
      "extracted_data": {...},
      "regex_patterns": {...}
    },
    "document_sections": {
      "extracted_data": {...},
      "regex_patterns": {...}
    }
  }
}

════════════════════════════════════════════════════════════════
ВАЖНЫЕ ПРАВИЛА ДЛЯ REGEX:
════════════════════════════════════════════════════════════════

1. ЭКРАНИРОВАНИЕ: В JSON используй двойные слеши: \\d, \\s, \\n, \\w
2. КОНТЕКСТ: Всегда указывай что находится ДО и ПОСЛЕ извлекаемых данных
3. ФЛАГИ: 
   - MULTILINE - для паттернов с ^, $ и \\n
   - DOTALL - когда . должна включать \\n
   - IGNORECASE - для нечувствительности к регистру
4. ГРУППЫ: Используй () для захвата нужных значений
5. NON-GREEDY: Используй *? и +? чтобы избежать жадного захвата
6. АЛЬТЕРНАТИВЫ: Используй | для вариантов написания
7. ПРОБЕЛЫ: Учитывай \\s+, \\s*, возможные переносы строк

ПРИМЕР ХОРОШЕГО REGEX:
{
  "pattern": "Расход лома\\s+(\\d+(?:-\\d+)?)\\s*(?:ТОНН|тонн|т)",
  "flags": ["MULTILINE", "IGNORECASE"],
  "context_before": "^1\\.2\\.",
  "context_after": "\\n1\\.3\\.",
  "example_match": "65-75",
  "description": "Расход лома с диапазоном значений"
}

════════════════════════════════════════════════════════════════

Верни ТОЛЬКО валидный JSON без markdown блоков и дополнительного текста!


